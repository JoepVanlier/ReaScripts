<?xml version="1.0" encoding="utf-8"?>
<index version="1" name="RCJacH ReaScripts" commit="bc7f7656b511b632bcef1d6386c2c2137b3caaab">
  <category name="JSFX/Audio">
    <reapack name="AB Comparison.jsfx" type="effect" desc="AB Comparison">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 This JSFX alternates between signals from different channels for objective comparison purposes.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Instruction:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 1.\tx360\tab Set different comparing items to sequential stereo channels.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 2.\tx360\tab Set {\b # of Inputs} to number of stereo channels to compare.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 3.\tx360\tab Set desired switching beat length using {\b Switch Beat length}. Alternatively, set {\b Millisecond Mode} to > 0 for switching based on time\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 4.\tx360\tab Set switching mode using {\b Mode}: Manual = Switch by pressing channel trigger; Sequential = Switch to the next channel; Random = Switch to a random different channel; Guess = Switch to a random channel, press trigger to show answer. {\b Output Channel Display}s the current output channel.\sa180\par}
}
]]></description>
        <link rel="website">https://github.com/RCJacH/ReaScripts</link>
      </metadata>
      <version name="1.0" time="2017-01-18T18:46:33Z">
        <changelog><![CDATA[+ Initial Release

Potential Addition:
1. Switch in ms instead of beat division.
2. Switch while not playing.]]></changelog>
        <source>https://github.com/RCJacH/ReaScripts/raw/6c435acc784b9ed67a126ba2701493b11679a95c/JSFX/Audio/AB%20Comparison.jsfx</source>
      </version>
      <version name="1.1" time="2017-01-19T15:30:08Z">
        <changelog><![CDATA[+ Millisecond Mode.
+ Beat Mode works while not playing.
+ Guess Mode added Answer Display Time.
+ Limitation for user input.
+ Default channel initialization.
# Triggers in Sequential/Random Mode changes to Manual Mode.
# Clicking on time-line do not reset to output 1-2.
# Guess Mode switches by triggering, rather than time.
]]></changelog>
        <source>https://github.com/RCJacH/ReaScripts/raw/225dcb55a806ad1775d90a767f9edae92d7100ce/JSFX/Audio/AB%20Comparison.jsfx</source>
      </version>
    </reapack>
    <reapack name="BitRangeGain.jsfx" type="effect" desc="BitRangeGain">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Lossless gain adjustment for float point audio. 1 bit = doubling of distance.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Instruction:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Use Macro Shift to increase or decress audio input by 6.0206 dB per bit.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Use Micro Shift to fine adjust audio within 1 bit.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Use Bit Ratio to adjust the dB representation of one bit.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Fader is used as a percentage controller after bit shifting.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Use Fader Curve to adjust the behavior of Fader slider.\sa180\par}
}
]]></description>
        <link rel="website">https://github.com/RCJacH/ReaScripts</link>
      </metadata>
      <version name="1.0" time="2017-01-31T07:13:16Z">
        <changelog><![CDATA[+ Initial Release]]></changelog>
        <source>https://github.com/RCJacH/ReaScripts/raw/6f8b317f9082e6e7313ad3f8c5050357279c6584/JSFX/Audio/BitRangeGain.jsfx</source>
      </version>
    </reapack>
    <reapack name="NoiseBuzz.jsfx" type="effect" desc="NoiseBuzz">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Audio triggered dynamic noise generator with ASR and filter.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Instruction:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 1.\tx360\tab Set {\b Mix} slider to taste, use {\b Noise Gain} for additional volume control.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 2.\tx360\tab Select desired noise type.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 3.\tx360\tab (Optional) Use {\b Threshold}, {\b Attack}, {\b Release} to shape the envelope of the noise, with AR triggered by input audio exceed or fall under the threshold.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 4.\tx360\tab (Optional) Use {\b HPF}, {\b LPF}, and their {\b Resonance} controls to limit the frequency range of the generated noise.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 5.\tx360\tab (Optional) Adjust the detector {\b RMS} of the input level to smooth out the level of the generated noise.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 6.\tx360\tab You can also route the noise audio to channel 3-4 to further shape the noise, voiding the {\b Mix} control.\sa180\par}
}
]]></description>
        <link rel="website">https://github.com/RCJacH/ReaScripts</link>
      </metadata>
      <version name="1.0" time="2017-01-31T07:13:16Z">
        <changelog><![CDATA[+ Initial Release]]></changelog>
        <source>https://github.com/RCJacH/ReaScripts/raw/6f8b317f9082e6e7313ad3f8c5050357279c6584/JSFX/Audio/NoiseBuzz.jsfx</source>
      </version>
    </reapack>
  </category>
  <category name="JSFX/MIDI">
    <reapack name="midi_cc_eater.jsfx" type="effect" desc="Midi CC Eater">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 This JS plugin filters all inputs of selected CC. Instruction:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 1.\tx360\tab Add as an input FX.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 2.\tx360\tab Select specific CC or all CCs to filter.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 3.\tx360\tab Win.\sa180\par}
}
]]></description>
        <link rel="website">https://github.com/RCJacH/ReaScripts</link>
      </metadata>
      <version name="1.0" author="RCJacH" time="2017-03-07T12:19:42Z">
        <source>https://github.com/RCJacH/ReaScripts/raw/bee92c21a11db6084007db0d7c233799a3017059/JSFX/MIDI/midi_cc_eater.jsfx</source>
      </version>
    </reapack>
    <reapack name="midi_note_beat_repeater.jsfx" type="effect" desc="MIDI Note Beat Repeater">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 This script is made to emulate the note repeating function in Native Instrument Maschine hardware. I have never used Maschine myself, thus I do not know how it really works. However, I did watch some video that demonstrated great workflow for inputting hihat patterns. Instruction: You can use this script in two ways:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 1.\tx360\tab Insert as an input FX of your track. Assign MIDI CCs to all of the parameters, trigger slider11(On/Off) and press a note, the pressed note will repeat itself at an interval set using slider1(Rate), while slider2(Type) determines the type of rhythm it generates.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 2.\tx360\tab Insert as a normal FX before your sampler. Write the trigger note for the desired sample, and use envelop to control the parameters. You can even insert another track and record MIDI output of the original track, which allows you to edit the generated pattern. The Normal Type Lock slider(3) is great for drill type patterns where you have a steady 8th note groove with occasional 8th or 16th note triplet variations. This setting will free you from constantly alternating the type slider from triplet to normal. Channel Pressure is used to vary the velocity of repeated notes: output Velocity = Channel Pressure.\sa180\par}
}
]]></description>
        <link rel="website">https://github.com/RCJacH/ReaScripts</link>
      </metadata>
      <version name="1.1" author="RCJacH" time="2017-03-07T12:19:42Z">
        <changelog><![CDATA[* v1.1 (2016-10-09)
 + Renamed
 + Added Gate Function (Note Length)
 + Added Sync to grid function
 # Fixed Note On accuracy
* v1.0 (2016-07-24)
 + Initial Release]]></changelog>
        <source>https://github.com/RCJacH/ReaScripts/raw/bee92c21a11db6084007db0d7c233799a3017059/JSFX/MIDI/midi_note_beat_repeater.jsfx</source>
      </version>
    </reapack>
  </category>
  <category name="JSFX/Synth">
    <reapack name="Tone Sweep.jsfx" type="effect" desc="Tone Sweep">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 This JS plugin generates a sweeping tone base on settings Instruction:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 1.\tx360\tab Set starting and ending note, fine tuning in cents if desired.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 2.\tx360\tab Set sweeping time and envelope time.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 3.\tx360\tab Adjust envelope curves\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 4.\tx360\tab Select different wave shape if desired.\sa180\par}
}
]]></description>
        <link rel="website">https://github.com/RCJacH/ReaScripts</link>
      </metadata>
      <version name="0.1" author="RCJacH" time="2017-03-17T16:50:44Z">
        <source>https://github.com/RCJacH/ReaScripts/raw/bc53d68f3aa4aa650190bf4844eaff2af96a17b5/JSFX/Synth/Tone%20Sweep.jsfx</source>
      </version>
    </reapack>
  </category>
  <category name="Lua/Editing">
    <reapack name="RCJacH_Delete content under mouse (contextual).lua" type="script" desc="Delete Content Under Mouse (Contextual)">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Delete track/item/take/envelope depending on mouse position.\par}
}
]]></description>
        <link rel="website">https://github.com/RCJacH/ReaScripts</link>
      </metadata>
      <version name="1.0" author="RCJacH" time="2017-02-05T08:15:16Z">
        <source main="main">https://github.com/RCJacH/ReaScripts/raw/f1c9a8c864ca27e1b7763e6a980e1f7205509bfa/Lua/Editing/RCJacH_Delete%20content%20under%20mouse%20(contextual).lua</source>
      </version>
    </reapack>
    <reapack name="RCJacH_Glue Selected Items Preserve First Item Name.lua" type="script" desc="Glue selected items preserving first item name">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 Glue selected items, and rename result to:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 1.\tx360\tab The name of the first item If all item names are identical;\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 2.\tx360\tab The name of each nonidentical items.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 3.\tx360\tab Remove the "Glued" in item name (but not the file name unfortunately)\sa180\par}
}
]]></description>
        <link rel="website">https://github.com/RCJacH/ReaScripts</link>
      </metadata>
      <version name="1.0" author="RCJacH" time="2017-03-07T11:30:33Z">
        <source main="main">https://github.com/RCJacH/ReaScripts/raw/bacfc0d2cf9e3a139500cafa86b629917ac1dac6/Lua/Editing/RCJacH_Glue%20Selected%20Items%20Preserve%20First%20Item%20Name.lua</source>
      </version>
    </reapack>
  </category>
</index>
